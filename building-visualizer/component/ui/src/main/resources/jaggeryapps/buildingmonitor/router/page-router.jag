<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

var originalURI;
var urlPrefix;
var dest;
var sendLogin;

(function () {
    var utils = require("/utils/utils.js").utils;
    var constants = require("/utils/constants.js").constants;
    var relativeURI;
    originalURI = request.getRequestURI();
    var matcher = new URIMatcher(originalURI);
    urlPrefix = utils.relativePrefix(originalURI);
    if (matcher.match('/{context}') || matcher.match('/{context}/')) {
        relativeURI = originalURI.match(/.*\/$/ig) ? '/' : '';
    } else if (matcher.match('/{context}/{+any}')) {
        var vars = matcher.elements();
        relativeURI = '/' + vars.any;
    }

    request.getRequestURI = function () {
        return relativeURI;
    };


    sendLogin = function (isInvalidLogin) {
        var query = request.getQueryString();
        dest = encodeURIComponent(originalURI + (query ? '?' + query : ''));

        if (!isInvalidLogin) {
            response.sendRedirect(urlPrefix + 'login-controller?destination=' + dest);
            return;
        }
        response.sendRedirect(urlPrefix + 'login-controller?destination=' + dest + "&message=Authentication failed.");
    };

    var page = request.getRequestURI();
    var controller = '/controllers';
    if (page === '') {
        controller += '/index.jag';
    } else if (page === '/') {
        controller += '/index.jag';
    } else {
        controller += page + '.jag';
    }
    var path = utils.findJag(controller);
    if (!path) {
        response.sendError(404, 'Requested page cannot be found');
        return;
    } else {
        var query = request.getQueryString();
        dest = encodeURIComponent(originalURI + (query ? '?' + query : ''));
        include(path);
    }

})();

%>
